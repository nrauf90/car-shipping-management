{"ast":null,"code":"import { AUTO_LOGIN_ACTION, LOGIN_ACTION, LOGOUT_ACTION, SIGNUP_ACTION } from \"@/store/storeconstants\";\nimport axios from \"axios\";\nimport ValidationsService from \"@/services/ValidationsService\";\nexport default {\n  [LOGOUT_ACTION](context) {\n    localStorage.removeItem('userData');\n    context.commit('SET_USER_DATA_MUTATION', {\n      access_token: '',\n      token_type: '',\n      name: '',\n      email: '',\n      id: ''\n    });\n  },\n  async [LOGIN_ACTION](context, payload) {\n    await axios.post('login', payload, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        localStorage.setItem('userData', JSON.stringify(response.data));\n        context.commit('SET_USER_DATA_MUTATION', response.data);\n      }\n    }).catch(error => {\n      let errorMessage = ValidationsService.getLoginErrors(error.response.data);\n      throw errorMessage;\n    });\n  },\n  [AUTO_LOGIN_ACTION](context) {\n    let userData = localStorage.getItem('userData');\n    if (userData) {\n      context.commit('SET_USER_DATA_MUTATION', JSON.parse(userData));\n    }\n  },\n  async [SIGNUP_ACTION](context, payload) {\n    await axios.post('register', payload, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        localStorage.setItem('userData', JSON.stringify(response.data));\n        context.commit('SET_USER_DATA_MUTATION', response.data);\n      }\n    }).catch(error => {\n      let errorMessage = ValidationsService.getSignupErrors(error.response.data.errors);\n      throw errorMessage;\n    });\n  }\n};","map":{"version":3,"names":["AUTO_LOGIN_ACTION","LOGIN_ACTION","LOGOUT_ACTION","SIGNUP_ACTION","axios","ValidationsService","context","localStorage","removeItem","commit","access_token","token_type","name","email","id","payload","post","headers","then","response","status","setItem","JSON","stringify","data","catch","error","errorMessage","getLoginErrors","userData","getItem","parse","getSignupErrors","errors"],"sources":["C:/Personal/car-shipping/car-shipping-managment/src/store/modules/auth/actions.js"],"sourcesContent":["import {AUTO_LOGIN_ACTION, LOGIN_ACTION, LOGOUT_ACTION, SIGNUP_ACTION} from \"@/store/storeconstants\";\r\nimport axios from \"axios\";\r\nimport ValidationsService from \"@/services/ValidationsService\";\r\n\r\nexport default {\r\n    [LOGOUT_ACTION](context) {\r\n        localStorage.removeItem('userData');\r\n        context.commit('SET_USER_DATA_MUTATION', {\r\n            access_token: '',\r\n            token_type: '',\r\n            name: '',\r\n            email: '',\r\n            id: '',\r\n        });\r\n    },\r\n    async [LOGIN_ACTION](context, payload) {\r\n        await axios.post(\r\n            'login',\r\n            payload,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                }\r\n            }\r\n        ).then(response => {\r\n            if (response.status === 200) {\r\n                localStorage.setItem('userData', JSON.stringify(response.data))\r\n                context.commit('SET_USER_DATA_MUTATION', response.data);\r\n            }\r\n        }).catch(error => {\r\n            let errorMessage = ValidationsService.getLoginErrors(error.response.data)\r\n            throw errorMessage;\r\n        });\r\n    },\r\n    [AUTO_LOGIN_ACTION](context){\r\n        let userData = localStorage.getItem('userData');\r\n        if (userData) {\r\n            context.commit('SET_USER_DATA_MUTATION', JSON.parse(userData));\r\n        }\r\n    },\r\n    async [SIGNUP_ACTION](context, payload) {\r\n        await axios.post(\r\n            'register',\r\n            payload,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                }\r\n            }\r\n        ).then(response => {\r\n            if (response.status === 200) {\r\n                localStorage.setItem('userData', JSON.stringify(response.data))\r\n                context.commit('SET_USER_DATA_MUTATION', response.data);\r\n            }\r\n        }).catch(error => {\r\n            let errorMessage = ValidationsService.getSignupErrors(error.response.data.errors);\r\n            throw errorMessage;\r\n        })\r\n    }\r\n};"],"mappings":"AAAA,SAAQA,iBAAiB,EAAEC,YAAY,EAAEC,aAAa,EAAEC,aAAa,QAAO,wBAAwB;AACpG,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,kBAAkB,MAAM,+BAA+B;AAE9D,eAAe;EACX,CAACH,aAAa,EAAEI,OAAO,EAAE;IACrBC,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC;IACnCF,OAAO,CAACG,MAAM,CAAC,wBAAwB,EAAE;MACrCC,YAAY,EAAE,EAAE;MAChBC,UAAU,EAAE,EAAE;MACdC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,EAAE,EAAE;IACR,CAAC,CAAC;EACN,CAAC;EACD,OAAOb,YAAY,EAAEK,OAAO,EAAES,OAAO,EAAE;IACnC,MAAMX,KAAK,CAACY,IAAI,CACZ,OAAO,EACPD,OAAO,EACP;MACIE,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE;MACd;IACJ,CACJ,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;MACf,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QACzBb,YAAY,CAACc,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAC/DlB,OAAO,CAACG,MAAM,CAAC,wBAAwB,EAAEU,QAAQ,CAACK,IAAI,CAAC;MAC3D;IACJ,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAI;MACd,IAAIC,YAAY,GAAGtB,kBAAkB,CAACuB,cAAc,CAACF,KAAK,CAACP,QAAQ,CAACK,IAAI,CAAC;MACzE,MAAMG,YAAY;IACtB,CAAC,CAAC;EACN,CAAC;EACD,CAAC3B,iBAAiB,EAAEM,OAAO,EAAC;IACxB,IAAIuB,QAAQ,GAAGtB,YAAY,CAACuB,OAAO,CAAC,UAAU,CAAC;IAC/C,IAAID,QAAQ,EAAE;MACVvB,OAAO,CAACG,MAAM,CAAC,wBAAwB,EAAEa,IAAI,CAACS,KAAK,CAACF,QAAQ,CAAC,CAAC;IAClE;EACJ,CAAC;EACD,OAAO1B,aAAa,EAAEG,OAAO,EAAES,OAAO,EAAE;IACpC,MAAMX,KAAK,CAACY,IAAI,CACZ,UAAU,EACVD,OAAO,EACP;MACIE,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE;MACd;IACJ,CACJ,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;MACf,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QACzBb,YAAY,CAACc,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAC/DlB,OAAO,CAACG,MAAM,CAAC,wBAAwB,EAAEU,QAAQ,CAACK,IAAI,CAAC;MAC3D;IACJ,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAI;MACd,IAAIC,YAAY,GAAGtB,kBAAkB,CAAC2B,eAAe,CAACN,KAAK,CAACP,QAAQ,CAACK,IAAI,CAACS,MAAM,CAAC;MACjF,MAAMN,YAAY;IACtB,CAAC,CAAC;EACN;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}