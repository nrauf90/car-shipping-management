{"ast":null,"code":"import Validations from \"@/services/Validations\";\nexport default class ValidationsService {\n  constructor(email, password, name = '') {\n    this.email = email;\n    this.password = password;\n    this.name = name;\n  }\n  checkLoginValidation() {\n    let errors = [];\n\n    // email validations\n    if (!Validations.isRequired(this.email)) {\n      errors['email'] = \"Email is Required\";\n    } else if (!Validations.checkEmail(this.email)) {\n      errors['email'] = \"Invalid email\";\n    }\n\n    // password validation\n    if (!Validations.isRequired(this.password)) {\n      errors['password'] = \"Password is Required\";\n    } else if (!Validations.minLength(this.password, 6)) {\n      errors['password'] = \"Password must be at least 6 characters\";\n    }\n    return errors;\n  }\n  checkSignupValidation() {\n    let errors = [];\n\n    // name validations\n    if (!Validations.isRequired(this.name)) {\n      errors[\"name\"] = \"Name is Required\";\n    }\n    if (!Validations.isRequired(this.email)) {\n      errors['email'] = \"Email is Required\";\n    } else if (!Validations.checkEmail(this.email)) {\n      errors['email'] = \"Invalid email\";\n    }\n\n    // password validation\n    if (!Validations.isRequired(this.password)) {\n      errors['password'] = \"Password is Required\";\n    } else if (!Validations.minLength(this.password, 6)) {\n      errors['password'] = \"Password must be at least 6 characters\";\n    }\n    return errors;\n  }\n  static getErrors(errors) {\n    let errorMessages = [];\n    for (let key in errors) {\n      errorMessages[key] = errors[key][0];\n    }\n    return errorMessages;\n  }\n}","map":{"version":3,"names":["Validations","ValidationsService","constructor","email","password","name","checkLoginValidation","errors","isRequired","checkEmail","minLength","checkSignupValidation","getErrors","errorMessages","key"],"sources":["C:/Personal/car-shipping/car-shipping-managment/src/services/ValidationsService.js"],"sourcesContent":["import Validations from \"@/services/Validations\";\r\n\r\nexport default class ValidationsService{\r\n    constructor(email, password, name='') {\r\n        this.email = email;\r\n        this.password = password;\r\n        this.name = name;\r\n    }\r\n\r\n    checkLoginValidation(){\r\n        let errors = [];\r\n\r\n        // email validations\r\n        if(!Validations.isRequired(this.email)){\r\n            errors['email'] = \"Email is Required\";\r\n        }\r\n        else if(!Validations.checkEmail(this.email)){\r\n            errors['email'] = \"Invalid email\";\r\n        }\r\n\r\n        // password validation\r\n        if(!Validations.isRequired(this.password)){\r\n            errors['password'] = \"Password is Required\";\r\n        }\r\n        else if(!Validations.minLength(this.password, 6)){\r\n            errors['password'] = \"Password must be at least 6 characters\";\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    checkSignupValidation(){\r\n        let errors = [];\r\n\r\n        // name validations\r\n        if(!Validations.isRequired(this.name)){\r\n            errors[\"name\"] = \"Name is Required\";\r\n        }\r\n\r\n        if(!Validations.isRequired(this.email)){\r\n            errors['email'] = \"Email is Required\";\r\n        }\r\n        else if(!Validations.checkEmail(this.email)){\r\n            errors['email'] = \"Invalid email\";\r\n        }\r\n\r\n        // password validation\r\n        if(!Validations.isRequired(this.password)){\r\n            errors['password'] = \"Password is Required\";\r\n        }\r\n        else if(!Validations.minLength(this.password, 6)){\r\n            errors['password'] = \"Password must be at least 6 characters\";\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    static getErrors(errors){\r\n        let errorMessages = [];\r\n        for(let key in errors){\r\n            errorMessages[key] = errors[key][0];\r\n        }\r\n        return errorMessages;\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,WAAW,MAAM,wBAAwB;AAEhD,eAAe,MAAMC,kBAAkB;EACnCC,WAAWA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,GAAC,EAAE,EAAE;IAClC,IAAI,CAACF,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,IAAI,GAAGA,IAAI;EACpB;EAEAC,oBAAoBA,CAAA,EAAE;IAClB,IAAIC,MAAM,GAAG,EAAE;;IAEf;IACA,IAAG,CAACP,WAAW,CAACQ,UAAU,CAAC,IAAI,CAACL,KAAK,CAAC,EAAC;MACnCI,MAAM,CAAC,OAAO,CAAC,GAAG,mBAAmB;IACzC,CAAC,MACI,IAAG,CAACP,WAAW,CAACS,UAAU,CAAC,IAAI,CAACN,KAAK,CAAC,EAAC;MACxCI,MAAM,CAAC,OAAO,CAAC,GAAG,eAAe;IACrC;;IAEA;IACA,IAAG,CAACP,WAAW,CAACQ,UAAU,CAAC,IAAI,CAACJ,QAAQ,CAAC,EAAC;MACtCG,MAAM,CAAC,UAAU,CAAC,GAAG,sBAAsB;IAC/C,CAAC,MACI,IAAG,CAACP,WAAW,CAACU,SAAS,CAAC,IAAI,CAACN,QAAQ,EAAE,CAAC,CAAC,EAAC;MAC7CG,MAAM,CAAC,UAAU,CAAC,GAAG,wCAAwC;IACjE;IAEA,OAAOA,MAAM;EACjB;EAEAI,qBAAqBA,CAAA,EAAE;IACnB,IAAIJ,MAAM,GAAG,EAAE;;IAEf;IACA,IAAG,CAACP,WAAW,CAACQ,UAAU,CAAC,IAAI,CAACH,IAAI,CAAC,EAAC;MAClCE,MAAM,CAAC,MAAM,CAAC,GAAG,kBAAkB;IACvC;IAEA,IAAG,CAACP,WAAW,CAACQ,UAAU,CAAC,IAAI,CAACL,KAAK,CAAC,EAAC;MACnCI,MAAM,CAAC,OAAO,CAAC,GAAG,mBAAmB;IACzC,CAAC,MACI,IAAG,CAACP,WAAW,CAACS,UAAU,CAAC,IAAI,CAACN,KAAK,CAAC,EAAC;MACxCI,MAAM,CAAC,OAAO,CAAC,GAAG,eAAe;IACrC;;IAEA;IACA,IAAG,CAACP,WAAW,CAACQ,UAAU,CAAC,IAAI,CAACJ,QAAQ,CAAC,EAAC;MACtCG,MAAM,CAAC,UAAU,CAAC,GAAG,sBAAsB;IAC/C,CAAC,MACI,IAAG,CAACP,WAAW,CAACU,SAAS,CAAC,IAAI,CAACN,QAAQ,EAAE,CAAC,CAAC,EAAC;MAC7CG,MAAM,CAAC,UAAU,CAAC,GAAG,wCAAwC;IACjE;IAEA,OAAOA,MAAM;EACjB;EAEA,OAAOK,SAASA,CAACL,MAAM,EAAC;IACpB,IAAIM,aAAa,GAAG,EAAE;IACtB,KAAI,IAAIC,GAAG,IAAIP,MAAM,EAAC;MAClBM,aAAa,CAACC,GAAG,CAAC,GAAGP,MAAM,CAACO,GAAG,CAAC,CAAC,CAAC,CAAC;IACvC;IACA,OAAOD,aAAa;EACxB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}